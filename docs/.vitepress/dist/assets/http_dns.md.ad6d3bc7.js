import{_ as o,o as e,c,Q as d}from"./chunks/framework.281e52d7.js";const t="/site/assets/dns.b5ace7de.png",g=JSON.parse('{"title":"DNS 查询","description":"","frontmatter":{},"headers":[],"relativePath":"http/dns.md","filePath":"http/dns.md","lastUpdated":1710853966000}'),s={name:"http/dns.md"},i=d('<h1 id="dns-查询" tabindex="-1">DNS 查询 <a class="header-anchor" href="#dns-查询" aria-label="Permalink to &quot;DNS 查询&quot;">​</a></h1><p><code>DNS</code> 查询是 域名的 <code>IP</code> 地址查询过程，其中会依次经过 <strong>递归查询</strong>、<strong>迭代查询</strong>，如客户端发起一个 <code>DNS</code> 查询流程</p><ol><li>本地 浏览器 首先查询是否有该 域名 的缓存，有则返回</li><li>查询 操作系统 中是否缓存该域名</li><li>查询 本地 <code>host</code> 是否缓存该域名</li><li>请求 本地 <code>DNS</code> 服务器，看是否缓存了该域名</li><li>如果还找不到，本地 <code>DNS</code> 服务器则请求 <strong>根域名服务器</strong>。例如 想要查找 <code>www.baidu.com</code> 的 <code>IP</code> 地址，根域名服务器 会返回 <code>.com</code> 这个 顶级域名服务器 的 <code>IP</code> 地址，让 本地 <code>DNS</code> 服务器去这里找</li><li>本地 <code>DNS</code> 服务器向 <strong>顶级域名服务器</strong> 发起查询 <code>www.baidu.com</code> 的 <code>IP</code> 地址 请求，返回该域名地址的 <strong>权威服务器</strong> 地址</li><li>本地 <code>DNS</code> 服务器 向 <strong>权威服务器</strong> 发起查询 <code>www.baidu.com</code> 的 <code>IP</code> 地址 请求，返回该域名的 <code>IP</code> 地址</li><li>本地 <code>DNS</code> 服务器将 查到的 <code>IP</code> 地址返回给客户端</li><li>缓存 该 <code>IP</code> 地址</li></ol><blockquote><p>其中 第 <code>1 - 4</code> 为 递归查询 ， <code>5 - 7</code> 为 迭代查询</p></blockquote><p><img src="'+t+'" alt="dns"></p><p>域名的层级关系类似于一个树状结构</p><ul><li>根 <code>DNS</code> 服务器（ <code>.</code> ）</li><li>顶级域名服务器（ <code>.com</code> ）</li><li>权威 <code>DNS</code> 服务器（ <code>server.com</code> ）</li></ul>',7),l=[i];function n(a,r,_,p,m,S){return e(),c("div",null,l)}const h=o(s,[["render",n]]);export{g as __pageData,h as default};
