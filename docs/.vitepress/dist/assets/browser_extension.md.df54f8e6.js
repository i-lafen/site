import{_ as s,o as n,c as a,Q as o}from"./chunks/framework.25bfaa42.js";const l="/assets/web-request.4f6cb3a4.png",p="/assets/extension.f4fe6021.jpg",e="/assets/extension-2.20a98c64.jpg",F=JSON.parse('{"title":"Chrome 插件","description":"","frontmatter":{},"headers":[],"relativePath":"browser/extension.md","filePath":"browser/extension.md"}'),t={name:"browser/extension.md"},c=o(`<h1 id="chrome-插件" tabindex="-1">Chrome 插件 <a class="header-anchor" href="#chrome-插件" aria-label="Permalink to &quot;Chrome 插件&quot;">​</a></h1><p>本文由网络文章整理而来，尝试理解 <code>Chrome</code> 插件基本概念和结构，并提供 <code>Demo</code> 帮助理解和开发一个 <code>Chrome</code> 插件。</p><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p><code>Chrome Extension</code> ， 一个增强浏览器功能的程序，本质为使用 <code>js</code> 、 <code>css</code> 、 <code>html</code> 开发的 <code>web</code> 程序，后缀为 <code>.crx</code> 的压缩包。</p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><p><code>Chrome</code> 插件提供的 <code>API</code> 功能大致包含以下：</p><ul><li>书签控制</li><li>下载控制</li><li>窗口控制</li><li>标签控制</li><li>网络请求控制，各类事件监听</li><li>自定义原生菜单</li><li>通信机制</li></ul><h2 id="开发和调试" tabindex="-1">开发和调试 <a class="header-anchor" href="#开发和调试" aria-label="Permalink to &quot;开发和调试&quot;">​</a></h2><p><code>Chrome</code> 插件项目比较简洁，只要求项目根目录下包含 <code>manifest.json</code> 文件配置即可视为一个 <code>Chrome</code> 插件，其他与普通 <code>web</code> 程序一样。</p><p>本地开发时，不需要打包成 <code>.crx</code> ，只需要打开扩展程序管理页面 <code>chrome://extensions</code> ， 开启开发者模式，然后点击 <code>加载已解压的扩展程序</code> 添加即可进行调试。</p><p>注意开发时，改动必须重新加载 <code>Chrome</code> 插件。</p><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><ul><li><code>manifest.json</code></li><li><code>content_scripts</code></li><li><code>background</code></li><li><code>event-pages</code></li><li><code>popup</code></li><li><code>injected-script</code></li><li><code>homepage_url</code></li></ul><h3 id="manifest-json" tabindex="-1">manifest.json <a class="header-anchor" href="#manifest-json" aria-label="Permalink to &quot;manifest.json&quot;">​</a></h3><p>插件必需配置文件，常见配置如下</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 必须，配置文件版本 ， 目前版本是 3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;manifest_version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 必须，插件的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;chrome_plugin_demo&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 必须，插件的版本</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 插件描述</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;简单的 Chrome 扩展 demo&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 图标</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;icons&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;16&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;imgs/icon.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;48&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;imgs/icon.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;128&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;imgs/icon.png&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 会一直常驻的后台JS或后台页面</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;background&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 2种指定方式，如果指定JS，那么会自动生成一个背景页</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;page&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;background.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//&quot;scripts&quot;: [&quot;js/background.js&quot;]</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 浏览器右上角图标设置， action</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;action&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;default_icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;imgs/icon.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 图标悬停时的标题，可选</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;default_title&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;这是一个示例Chrome插件&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;default_popup&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;popup.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// // 当某些特定页面打开才显示的图标</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// &quot;page_action&quot;: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 	&quot;default_icon&quot;: &quot;img/icon.png&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 	&quot;default_title&quot;: &quot;我是pageAction&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 	&quot;default_popup&quot;: &quot;popup.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 需要直接注入页面的JS</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;content_scripts&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//&quot;matches&quot;: [&quot;http://*/*&quot;, &quot;https://*/*&quot;],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// &quot;&lt;all_urls&gt;&quot; 表示匹配所有地址</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;matches&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;&lt;all_urls&gt;&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 多个JS按顺序注入</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;js&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;js/jquery-1.8.3.js&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;js/content-script.js&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;css&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;css/index.css&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 代码注入的时间，可选值： &quot;document_start&quot;, &quot;document_end&quot;, or &quot;document_idle&quot;，最后一个表示页面空闲时，默认document_idle</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;run_at&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;document_start&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 这里仅仅是为了演示content-script可以配置多个规则</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;matches&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;*://*/*.png&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;*://*/*.jpg&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;*://*/*.gif&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;*://*/*.bmp&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;js&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;js/show-image-content-size.js&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 权限申请</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;permissions&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;contextMenus&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 右键菜单</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;tabs&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 标签</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;notifications&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 通知</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;webRequest&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// web请求</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;webRequestBlocking&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 插件本地存储</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;http://*/*&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 可以通过executeScript或者insertCSS访问的网站</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;https://*/*&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 可以通过executeScript或者insertCSS访问的网站</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的，格式需为数组，matches 和 resources 也同样是数组</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;web_accessible_resources&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;matches&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;https://baidu.com/*&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">&quot;resources&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;js/inject.js&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 插件主页，这个很重要，不要浪费了这个免费广告位</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;homepage_url&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://lafen.gitee.io&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 覆盖浏览器默认页面</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;chrome_url_overrides&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 覆盖浏览器默认的新标签页</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;newtab&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;newtab.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// Chrome40以后的插件配置页写法</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;options_ui&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;page&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;options.html&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 添加一些默认的样式，推荐使用</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;chrome_style&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 向地址栏注册一个关键字以提供搜索建议，只能设置一个关键字</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;omnibox&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;keyword&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;lafen&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 默认语言，设置的话，需在根目录有对应的 _locals 文件夹</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;default_locale&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;zh_CN&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// devtools页面入口，注意只能指向一个HTML文件，不能是JS文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;devtools_page&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;devtools.html&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 必须，配置文件版本 ， 目前版本是 3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;manifest_version&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 必须，插件的名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;chrome_plugin_demo&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 必须，插件的版本</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;version&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 插件描述</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;简单的 Chrome 扩展 demo&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 图标</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;icons&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;16&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;imgs/icon.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;48&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;imgs/icon.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;128&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;imgs/icon.png&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 会一直常驻的后台JS或后台页面</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;background&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 2种指定方式，如果指定JS，那么会自动生成一个背景页</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;page&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;background.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//&quot;scripts&quot;: [&quot;js/background.js&quot;]</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 浏览器右上角图标设置， action</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;action&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;default_icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;imgs/icon.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 图标悬停时的标题，可选</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;default_title&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;这是一个示例Chrome插件&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;default_popup&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;popup.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// // 当某些特定页面打开才显示的图标</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// &quot;page_action&quot;: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 	&quot;default_icon&quot;: &quot;img/icon.png&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 	&quot;default_title&quot;: &quot;我是pageAction&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 	&quot;default_popup&quot;: &quot;popup.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 需要直接注入页面的JS</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;content_scripts&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//&quot;matches&quot;: [&quot;http://*/*&quot;, &quot;https://*/*&quot;],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// &quot;&lt;all_urls&gt;&quot; 表示匹配所有地址</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;matches&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;&lt;all_urls&gt;&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 多个JS按顺序注入</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;js&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;js/jquery-1.8.3.js&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;js/content-script.js&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;css&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;css/index.css&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 代码注入的时间，可选值： &quot;document_start&quot;, &quot;document_end&quot;, or &quot;document_idle&quot;，最后一个表示页面空闲时，默认document_idle</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;run_at&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;document_start&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 这里仅仅是为了演示content-script可以配置多个规则</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;matches&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;*://*/*.png&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;*://*/*.jpg&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;*://*/*.gif&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;*://*/*.bmp&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;js&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;js/show-image-content-size.js&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 权限申请</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;permissions&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;contextMenus&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 右键菜单</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;tabs&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 标签</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;notifications&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 通知</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;webRequest&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// web请求</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;webRequestBlocking&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 插件本地存储</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;http://*/*&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 可以通过executeScript或者insertCSS访问的网站</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;https://*/*&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 可以通过executeScript或者insertCSS访问的网站</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的，格式需为数组，matches 和 resources 也同样是数组</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;web_accessible_resources&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;matches&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;https://baidu.com/*&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#005CC5;">&quot;resources&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;js/inject.js&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 插件主页，这个很重要，不要浪费了这个免费广告位</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;homepage_url&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://lafen.gitee.io&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 覆盖浏览器默认页面</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;chrome_url_overrides&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 覆盖浏览器默认的新标签页</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;newtab&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;newtab.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// Chrome40以后的插件配置页写法</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;options_ui&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;page&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;options.html&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 添加一些默认的样式，推荐使用</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;chrome_style&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 向地址栏注册一个关键字以提供搜索建议，只能设置一个关键字</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;omnibox&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;keyword&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;lafen&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 默认语言，设置的话，需在根目录有对应的 _locals 文件夹</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;default_locale&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;zh_CN&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// devtools页面入口，注意只能指向一个HTML文件，不能是JS文件</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;devtools_page&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;devtools.html&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="content-scripts" tabindex="-1">content-scripts <a class="header-anchor" href="#content-scripts" aria-label="Permalink to &quot;content-scripts&quot;">​</a></h3><p><code>Chrome</code> 向页面注入脚本的一种新式（包含 <code>css</code> ），借助 <code>content-scripts</code> 可以实现通过配置向指定页面注入 <code>js</code> 和 <code>css</code> （也可以动态注入）</p><p>常见配置如上 <code>manifest.json</code> 的 <code>content_scripts</code> 字段</p><p><strong>特别注意</strong>，如果没有主动指定 <code>run_at</code> 为 <code>document_start</code> （默认为 <code>document_idle</code> ），下面这种代码是不会生效的</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;DOMContentLoaded&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;我被执行了！&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;DOMContentLoaded&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;我被执行了！&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><code>content-scripts</code> 和原始页面共享 <code>DOM</code> ，但是不共享 <code>js</code> ， 如果要访问页面 <code>js</code> （变量） ，只能通过 <code>injected js</code> 来实现。</p><p><code>content-scripts</code> 不能访问绝大部分 <code>chrome.xxx.api</code> ， 除了以下 <code>4</code> 种</p><ul><li><code>chrome.extension(getURL, inIncognitoContext, lastError, onRequest, sendRequest)</code></li><li><code>chrome.i18n</code></li><li><code>chrome.runtime(connect, getManifest, getURL, id, onConnect, onMessage, sendMessage)</code></li><li><code>chrome.storage</code></li></ul><h3 id="background" tabindex="-1">background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background&quot;">​</a></h3><p>后台，常驻页面，它的生命周期最长，跟随浏览器打开关闭，通常把需要一直运行的、启动就运行的、全局的代码放在 <code>background</code> 里面。</p><p><code>background</code> 的权限非常高，几乎可以调用所有 <code>Chrome</code> 扩展 <code>API</code> （除了 <code>devtools</code> ），而且可以无限制跨域。</p><p>需要特别说明的是，虽然你可以通过 <code>chrome-extension://xxx/background.html</code> 直接打开后台页，但是你打开的后台页和真正一直在后台运行的那个页面不是同一个。</p><h3 id="event-pages" tabindex="-1">event-pages <a class="header-anchor" href="#event-pages" aria-label="Permalink to &quot;event-pages&quot;">​</a></h3><p>鉴于 <code>background</code> 生命周期太长，长时间挂载后台可能会影响性能，所以 <code>Google</code> 又弄一个 <code>event-pages</code> ，在配置文件上，它与 <code>background</code> 的唯一区别就是多了一个 <code>persistent</code> 参数</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;background&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;event-page.js&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;persistent&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;background&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;scripts&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;event-page.js&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;persistent&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>它的生命周期是：在被需要时加载，在空闲时被关闭。比如第一次安装、插件更新、有 <code>content-script</code> 向它发送消息等。</p><h3 id="popup" tabindex="-1">popup <a class="header-anchor" href="#popup" aria-label="Permalink to &quot;popup&quot;">​</a></h3><p><code>popup</code> 是点击 <code>browser_action</code> 或者 <code>page_action</code> 图标时打开的一个小窗口网页，焦点离开网页就立即关闭，一般用来做一些临时性的交互。</p><p>在权限上，它和 <code>background</code> 非常类似，它们之间最大的不同是生命周期的不同， <code>popup</code> 中可以直接通过 <code>chrome.extension.getBackgroundPage()</code> 获取 <code>background</code> 的 <code>window</code> 对象</p><h3 id="injected-script" tabindex="-1">injected-script <a class="header-anchor" href="#injected-script" aria-label="Permalink to &quot;injected-script&quot;">​</a></h3><p>指的是通过 <code>DOM</code> 操作的方式向页面注入的一种 <code>JS</code> 。</p><p>因为 <code>content-script</code> 有一个很大的缺陷，就是无法访问页面中的 <code>js</code> ，虽然可以操作 <code>dom</code> ， 但是无法通过 绑定事件的方式 调用 <code>content-script</code> 的方法（ <code>onclick</code> 和 <code>addEventListener</code> 都不行）。</p><p>如果需要在页面上添加一个按钮，并通过该按钮调用扩展的 <code>API</code> 的话，就可以在 <code>content-script</code> 中通过 <code>dom</code> 方式向页面注入 <code>inject-script</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">injectCustomJs</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">jsPath</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  jsPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> jsPath </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;js/inject.js&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;script&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  temp.</span><span style="color:#B392F0;">setAttribute</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;type&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;text/javascript&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 获得的地址类似：chrome-extension://[chrome extension id]/js/inject.js</span></span>
<span class="line"><span style="color:#E1E4E8;">  temp.src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> chrome.extension.</span><span style="color:#B392F0;">getURL</span><span style="color:#E1E4E8;">(jsPath);</span></span>
<span class="line"><span style="color:#E1E4E8;">  temp.</span><span style="color:#B392F0;">onload</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 执行完移除掉</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.parentNode.</span><span style="color:#B392F0;">removeChild</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  document.head.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(temp)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">injectCustomJs</span><span style="color:#24292E;">(</span><span style="color:#E36209;">jsPath</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  jsPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> jsPath </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;js/inject.js&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;script&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  temp.</span><span style="color:#6F42C1;">setAttribute</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;type&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;text/javascript&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 获得的地址类似：chrome-extension://[chrome extension id]/js/inject.js</span></span>
<span class="line"><span style="color:#24292E;">  temp.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chrome.extension.</span><span style="color:#6F42C1;">getURL</span><span style="color:#24292E;">(jsPath);</span></span>
<span class="line"><span style="color:#24292E;">  temp.</span><span style="color:#6F42C1;">onload</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 执行完移除掉</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.parentNode.</span><span style="color:#6F42C1;">removeChild</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  document.head.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(temp)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>另外还需要在配置中显式声明一下</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;web_accessible_resources&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;js/inject.js&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;web_accessible_resources&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;js/inject.js&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="homepage-url" tabindex="-1">homepage_url <a class="header-anchor" href="#homepage-url" aria-label="Permalink to &quot;homepage_url&quot;">​</a></h3><p>插件主页设置，可以设置 <code>url</code> 跳转到指定网站</p><h3 id="webrequest" tabindex="-1">webRequest <a class="header-anchor" href="#webrequest" aria-label="Permalink to &quot;webRequest&quot;">​</a></h3><p>通过 <code>webRequest</code> 系列 <code>api</code> 可以对 <code>http</code> 请求进行任意修改、定制，当然使用时候需要在配置文件中申请权限，其生命周期如下</p><p><img src="`+l+'" alt="webRequest"></p><p>在 扩展中可以使用 <code>chrome.webRequest.[xxx].addListener()</code> 的方式注册其生命周期回调。</p><p>但是 使用 <code>webRequest api</code> 是无法拿到 <code>responseBody</code> 的，想要拿到只能采取其他方式</p><ul><li>重写 <code>xmlHttpRequest</code> 和 <code>fetch</code> ，使用 装饰器模式 包装一下，自定义拦截事件</li><li><code>devtools</code> 的 <code>chrome.devtools.network.onRequestFinished</code> 的 <code>API</code> 可以拿到返回的 <code>body</code> ，缺点是必须打开开发者面板</li><li>使用 <code>chrome.debugger.sendCommand</code> 发送 <code>Network.getResponseBody</code> 命令来获取 <code>body</code> 内容，缺点也很明显，会有一个弹框提示 “xxx 正在调试此浏览器”</li></ul><h2 id="_5-种类型的-js-对比" tabindex="-1">5 种类型的 js 对比 <a class="header-anchor" href="#_5-种类型的-js-对比" aria-label="Permalink to &quot;5 种类型的 js 对比&quot;">​</a></h2><p><code>Chrome</code> 插件的 <code>js</code> 主要可以分为 <code>5</code> 种</p><ul><li><code>injected script</code></li><li><code>content-script</code></li><li><code>popup js</code></li><li><code>background js</code></li><li><code>devtool js</code></li></ul><h3 id="权限对比" tabindex="-1">权限对比 <a class="header-anchor" href="#权限对比" aria-label="Permalink to &quot;权限对比&quot;">​</a></h3><table><thead><tr><th>js</th><th>可访问的 api</th><th>dom 访问</th><th>js 访问</th><th>直接跨域</th></tr></thead><tbody><tr><td>injected script</td><td>和普通 js 无差别，不能访问任何 扩展 api</td><td>可以访问</td><td>可以访问</td><td>不可以</td></tr><tr><td>content script</td><td>只能访问 extension 、 runtime 等部分 api</td><td>可以访问</td><td>不可以</td><td>不可以</td></tr><tr><td>popup js</td><td>可访问绝大部分 API ，除了 devtools 系列</td><td>不可直接访问</td><td>不可以</td><td>可以</td></tr><tr><td>background js</td><td>可访问绝大部分 API ，除了 devtools 系列</td><td>不可直接访问</td><td>不可以</td><td>可以</td></tr><tr><td>devtools js</td><td>只能访问 devtools、extension、runtime 等部分 API</td><td>可以</td><td>可以</td><td>不可以</td></tr></tbody></table><h2 id="通信概览" tabindex="-1">通信概览 <a class="header-anchor" href="#通信概览" aria-label="Permalink to &quot;通信概览&quot;">​</a></h2><blockquote><p><code>-</code> 表示未查文档， 表格表示 第一列 向 第一行 发送数据的通信方式</p></blockquote><table><thead><tr><th>-</th><th>injected-script</th><th>content-script</th><th>popup-js</th><th>background-js</th></tr></thead><tbody><tr><td>injected-script</td><td>-</td><td>window.postMessage</td><td>-</td><td>-</td></tr><tr><td>content-script</td><td>window.postMessage</td><td>-</td><td>chrome.runtime.sendMessage 、 chrome.runtime.connect</td><td>chrome.runtime.sendMessage 、 chrome.runtime.connect</td></tr><tr><td>popup-js</td><td>-</td><td>chrome.tabs.sendMessage 、 chrome.tabs.connect</td><td>-</td><td>chrome.extension.getBackgroundPage()</td></tr><tr><td>background-js</td><td>-</td><td>chrome.tabs.sendMessage 、 chrome.tabs.connect</td><td>chrome.extension.getViews</td><td>-</td></tr><tr><td>devtools-js</td><td>chrome.devtools.inspectedWindow.eval</td><td>-</td><td>chrome.runtime.sendMessage</td><td>chrome.runtime.sendMessage</td></tr></tbody></table><h2 id="chrome-插件-demo" tabindex="-1">Chrome 插件 Demo <a class="header-anchor" href="#chrome-插件-demo" aria-label="Permalink to &quot;Chrome 插件 Demo&quot;">​</a></h2><h3 id="demo-地址" tabindex="-1">Demo 地址 <a class="header-anchor" href="#demo-地址" aria-label="Permalink to &quot;Demo 地址&quot;">​</a></h3><p><code>Demo</code> 地址见 <a href="https://gitee.com/lafen/yapi-ts-extension" target="_blank" rel="noreferrer">Demo</a></p><h3 id="demo-说明" tabindex="-1">Demo 说明 <a class="header-anchor" href="#demo-说明" aria-label="Permalink to &quot;Demo 说明&quot;">​</a></h3><p>常规简易 <code>web</code> 程序，未做具体打包事项。</p><p>插件开发时主要在于捋清各个 <code>js</code> 文件之间的通信关系，以及数据结构的处理，主要功能根据 <code>yapi</code> 接口文档生成相应的 <code>ts</code> 类型，主要涉及的关键点如下：</p><ul><li><p>数据拦截</p><ul><li>插件根目录必须 <code>manifest.json</code> 文件，相关配置可以看以上文章</li><li>在页面加载前由 <code>content</code> 向 页面 注入 <code>inject</code></li><li><code>inject</code> 通过拦截 <code>xhr</code> 来获取到接口返回的数据，通过 <code>window.postMessage</code> 发送回 <code>content</code></li><li><code>content</code> 再将数据通过 <code>chrome.runtime.sendMessage</code> 发送给 <code>background</code></li><li><code>background</code> 将数据通过 <code>chrome.storage.local</code> 保存到本地储存</li><li>这样 <code>popup</code> 中就能在打开时候从本地储存中获取到了接口数据了</li></ul></li><li><p><code>ts</code> 类型生成</p><ul><li>使用 <code>json-schema-to-typescript</code> 对数据进行 <code>ts</code> 类型转换</li><li>使用 <code>monaco-editor</code> 将 <code>ts</code> 类型显示到 <code>popup</code> 上</li></ul></li><li><p>效果如下</p><ul><li>生成接口入参、出参 <code>ts</code> 类型 及 注释 <img src="'+p+'" alt="extension"></li><li>生成 <code>api</code> 方法 和 对应的 <code>yapi</code> 地址 <img src="'+e+'" alt="extension-2"></li></ul></li></ul><h2 id="sources" tabindex="-1">Sources <a class="header-anchor" href="#sources" aria-label="Permalink to &quot;Sources&quot;">​</a></h2><p><a href="http://blog.haoji.me/chrome-plugin-develop.html#xie-zai-qian-mian" target="_blank" rel="noreferrer">Chrome插件(扩展)开发全攻略</a></p><p><a href="https://github.com/bcherny/json-schema-to-typescript.git" target="_blank" rel="noreferrer">json-schema-to-typescript</a></p><p><a href="https://github.com/microsoft/monaco-editor.git" target="_blank" rel="noreferrer">monaco-editor</a></p>',69),r=[c];function E(y,i,d,u,q,h){return n(),a("div",null,r)}const C=s(t,[["render",E]]);export{F as __pageData,C as default};
