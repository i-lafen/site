import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.a638f038.js";const g=JSON.parse('{"title":"Session Share","description":"","frontmatter":{},"headers":[],"relativePath":"web/session-share.md","filePath":"web/session-share.md"}'),l={name:"web/session-share.md"},e=o(`<h1 id="session-share" tabindex="-1">Session Share <a class="header-anchor" href="#session-share" aria-label="Permalink to &quot;Session Share&quot;">​</a></h1><p>不同标签页之间共享 <code>sessionStorage</code> 简易实现思路</p><h2 id="浏览器跨标签页通信方式" tabindex="-1">浏览器跨标签页通信方式 <a class="header-anchor" href="#浏览器跨标签页通信方式" aria-label="Permalink to &quot;浏览器跨标签页通信方式&quot;">​</a></h2><h3 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h3><p>常见的跨标签页通信有以下 <code>7</code> 种</p><ul><li><code>localStorage</code> 或 <code>sessionStorage</code></li><li><code>BroadcastChannel</code></li><li><code>Shared Worker</code></li><li><code>Service Worker</code></li><li><code>window.postMessage</code></li><li><code>IndexedDB</code></li><li><code>WebSocket</code></li></ul><h3 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h3><ul><li><code>localStorage</code> 能做到不同标签页操作的是同一份数据，能实时同步更新数据，监听 <code>storage</code> 事件可以更新到页面</li><li><code>sessionStorage</code> 只在打开新标签页时（ <code>window.open</code> ）复制一份数据给新标签页，任一标签页数据修改并不会同步给其他标签页，这是因为 <code>sessionStorage</code> 的作用范围和生命周期只限于当前会话窗口</li><li><code>BroadcastChannel</code> 是浏览器的消息通信机制，可以实时通过广播通信</li><li><code>webWorker</code> 是独立的后台线程，也可以在其中实现数据通信共享</li><li><code>window.postMessage</code> 可以给指定的标签窗口发送消息</li><li><code>IndexedDB</code> 是浏览器提供的本地数据库</li><li><code>WebSocket</code> 需要服务端支持，但能实现不同浏览器间的数据同步，在线文档类的需求中常见使用</li></ul><h3 id="实际场景" tabindex="-1">实际场景 <a class="header-anchor" href="#实际场景" aria-label="Permalink to &quot;实际场景&quot;">​</a></h3><p>在实际项目中，有些实时性的系统数据并不想保存在 <code>localStorage</code> 中永久保存，而是希望保存在随窗口消失的 <code>sessionStorage</code> 中，以便能够每次打开系统时都能重新请求保存</p><p>但系统中总有在另一个标签页中打开链接的需求，虽然此时 <code>sessionStorage</code> 中的数据会复制一份到新标签页，但是也希望能够像 <code>localStorage</code> 一样能够实现同步</p><p>意思就是，既需要 <code>localStorage</code> 的同步更新，又需要 <code>sessionStorage</code> 的随窗口消失的特性</p><h4 id="实现思路" tabindex="-1">实现思路 <a class="header-anchor" href="#实现思路" aria-label="Permalink to &quot;实现思路&quot;">​</a></h4><p>由 <code>Tab A</code> 打开 <code>Tab B</code> ，同步 系统通用 或 用户基本信息 等数据</p><ul><li>系统全局监听 <code>storage</code> 事件</li><li><code>Tab B</code> 中判断 <code>sessionStorage</code> 中没有储存的数据 <code>info</code> ，则设置一下 <code>localStorage.setItem(&#39;getSessionStorage&#39;, Date.now())</code></li><li><code>Tab A</code> 中的 <code>storage</code> 事件会触发，则在 <code>storage</code> 事件回调中将 <code>info</code> 设置到 <code>localStorage</code> 中</li><li><code>Tab A</code> 设置 <code>localStorage</code> ，便会触发 <code>Tab B</code> 中的 <code>storage</code> 事件，则可以在 <code>storage</code> 事件回调中将 <code>event.newValue</code> 设置到 <code>sessionStorage</code> 中</li><li>最后删除 <code>localStorage</code> 中的信息</li></ul><h4 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h4><ul><li><code>storage</code> 事件只会监听其他标签页的 <code>localStorage</code> 变化，当前标签的 <code>localStorage</code> 变化则不会</li><li>实际开发中，一般获取 <code>info</code> 数据需要在进入系统之前，但是 <code>storage</code> 事件触发是异步的，会导致还未监听 <code>storage</code> 就进入了系统，所以需要使用 <code>Promise</code> 来进行包装</li></ul><h4 id="基本代码" tabindex="-1">基本代码 <a class="header-anchor" href="#基本代码" aria-label="Permalink to &quot;基本代码&quot;">​</a></h4><blockquote><p>大致代码，但还需要根据实际情况在合适的地方移除 事件监听器</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkSession</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">sessionStorage.userInfo </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">Object.</span><span style="color:#B392F0;">keys</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(sessionStorage.userInfo)).</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 如果sessionStorage中没有userInfo或者userInfo是空的，设置localStorage中的一个时间戳</span></span>
<span class="line"><span style="color:#E1E4E8;">      localStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;getSessionStorage&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">Date</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">now</span><span style="color:#9ECBFF;">()</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 如果sessionStorage中有userInfo，则直接resolve</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    window.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;storage&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.key </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;getSessionStorage&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 如果其他标签页或窗口设置了getSessionStorage，将sessionStorage中的userInfo存储到localStorage</span></span>
<span class="line"><span style="color:#E1E4E8;">        localStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;userInfo&#39;</span><span style="color:#E1E4E8;">, sessionStorage.</span><span style="color:#B392F0;">getItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;userInfo&#39;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 然后移除localStorage中的getSessionStorage，表示该事件已处理</span></span>
<span class="line"><span style="color:#E1E4E8;">        localStorage.</span><span style="color:#B392F0;">removeItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;userInfo&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.key </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;userInfo&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> event.newValue) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 如果其他标签页或窗口更新了userInfo，将其更新到当前标签页的sessionStorage中</span></span>
<span class="line"><span style="color:#E1E4E8;">        sessionStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;userInfo&#39;</span><span style="color:#E1E4E8;">, event.newValue)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 解析新值后，resolve这个Promise</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkLogin</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;login&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkSession</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 等待checkSession执行完成</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">checkLogin</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 执行登录检查或其他操作</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkSession</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">(</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">sessionStorage.userInfo </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">Object.</span><span style="color:#6F42C1;">keys</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(sessionStorage.userInfo)).</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 如果sessionStorage中没有userInfo或者userInfo是空的，设置localStorage中的一个时间戳</span></span>
<span class="line"><span style="color:#24292E;">      localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;getSessionStorage&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">Date</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">now</span><span style="color:#032F62;">()</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 如果sessionStorage中有userInfo，则直接resolve</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    window.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;storage&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.key </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;getSessionStorage&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 如果其他标签页或窗口设置了getSessionStorage，将sessionStorage中的userInfo存储到localStorage</span></span>
<span class="line"><span style="color:#24292E;">        localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;userInfo&#39;</span><span style="color:#24292E;">, sessionStorage.</span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;userInfo&#39;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 然后移除localStorage中的getSessionStorage，表示该事件已处理</span></span>
<span class="line"><span style="color:#24292E;">        localStorage.</span><span style="color:#6F42C1;">removeItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;userInfo&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.key </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;userInfo&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> event.newValue) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 如果其他标签页或窗口更新了userInfo，将其更新到当前标签页的sessionStorage中</span></span>
<span class="line"><span style="color:#24292E;">        sessionStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;userInfo&#39;</span><span style="color:#24292E;">, event.newValue)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 解析新值后，resolve这个Promise</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkLogin</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;login&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkSession</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 等待checkSession执行完成</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">checkLogin</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 执行登录检查或其他操作</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">main</span><span style="color:#24292E;">()</span></span></code></pre></div>`,20),p=[e];function c(t,r,E,y,i,d){return a(),n("div",null,p)}const S=s(l,[["render",c]]);export{g as __pageData,S as default};
