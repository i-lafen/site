import{_ as e,o,c as l,Q as c}from"./chunks/framework.281e52d7.js";const h=JSON.parse('{"title":"Grid","description":"","frontmatter":{},"headers":[],"relativePath":"css/grid.md","filePath":"css/grid.md","lastUpdated":1692961506000}'),d={name:"css/grid.md"},a=c(`<h1 id="grid" tabindex="-1">Grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;Grid&quot;">​</a></h1><p><code>flex</code> 布局可看作是一维布局， <code>grid</code> 布局则可以看作是二维布局，它将容器划分成 <strong>行</strong> 和 <strong>列</strong>，产生单元格并能单独设置。也称为<strong>网格布局</strong>。</p><p><code>grid</code> 布局比 <code>flex</code> 布局更加强大，但同样也更加复杂。</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><ul><li>容器 （ <code>container</code> ）， 采用网格布局的区域</li><li>项目 （ <code>item</code> ） ， 容器内部采用网格定位的直接子元素</li><li>行 （ <code>row</code> ） ， 默认水平区域</li><li>列 （ <code>column</code> ） ， 默认垂直区域</li><li>单元格 （ <code>cell</code> ） ，行列交叉区域即单元格</li><li>网格线 （ <code>grid line</code> ） ， 划分网格的线</li></ul><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p>定义在容器上的属性为 <strong>容器属性</strong>，定义在项目上的为 <strong>项目属性</strong></p><h3 id="容器属性" tabindex="-1">容器属性 <a class="header-anchor" href="#容器属性" aria-label="Permalink to &quot;容器属性&quot;">​</a></h3><ul><li><code>display</code><ul><li><code>grid</code> ，开启网格布局，容器元素为<strong>块级元素</strong>，容器占满宽度</li><li><code>inline-grid</code> ，开启网格布局，容器元素为<strong>行内元素</strong></li></ul></li></ul><blockquote><p>注意，设为网格布局以后，容器子元素（项目）的 float、display: inline-block、display: table-cell、vertical-align和column-* 等设置都将失效。</p></blockquote><ul><li><p><code>grid-template-columns</code> 定义列宽</p></li><li><p><code>grid-template-rows</code> 定义行高</p><ul><li><code>repeat(num, ...args)</code> 可以重复设置 <code>args</code> 值 <code>num</code> 次，例如 <code>grid-template-columns: repeat(12, 1fr)</code></li><li><code>auto-fill</code> 表示自动填充，在单元格大小固定，但容器大小不确定时希望行列容纳尽可能多的的单元格可以使用，例如 <code>grid-template-columns: repeat(auto-fill, 100px)</code></li><li><code>fr</code> 即片段 <code>fraction</code> ， 表示比例关系</li><li><code>minmax(min, max)</code> 产生一个长度范围，表示长度在这最大最小值之间</li><li><code>auto</code> 浏览器自己决定长度</li><li>网格线名称， 可以使用 <strong>方括号</strong> ，指定每一根网格线的名字，方便以后引用，也支持多个名称，列如 <code>grid-template-columns: [c1 col-other] 100px [c2] 100px [c3] auto [c4]</code></li></ul></li><li><p><code>row-gap</code> 行间距</p></li><li><p><code>column-gap</code> 列间距</p></li><li><p><code>gap</code> 行间距和列间距的简写</p></li><li><p><code>grid-template-areas</code> 定义区域，例如</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">grid-template-areas</span><span style="color:#E1E4E8;">: &#39;</span><span style="color:#85E89D;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">b</span><span style="color:#E1E4E8;"> c&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">                     &#39;d e f&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">                     &#39;</span><span style="color:#85E89D;">g</span><span style="color:#E1E4E8;"> h i&#39;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">grid-template-areas</span><span style="color:#24292E;">: &#39;</span><span style="color:#22863A;">a</span><span style="color:#24292E;"> </span><span style="color:#22863A;">b</span><span style="color:#24292E;"> c&#39;</span></span>
<span class="line"><span style="color:#24292E;">                     &#39;d e f&#39;</span></span>
<span class="line"><span style="color:#24292E;">                     &#39;</span><span style="color:#22863A;">g</span><span style="color:#24292E;"> h i&#39;;</span></span></code></pre></div><p>其中相同区域可同名，不需要命名区域可使用 <code>.</code> 表示</p></li></ul><blockquote><p>注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为 区域名-start ，终止网格线自动命名为 区域名-end 。 比如，区域名为 header ，则起始位置的水平网格线和垂直网格线叫做 header-start ，终止位置的水平网格线和垂直网格线叫做 header-end 。</p></blockquote><ul><li><p><code>grid-auto-flow</code> 设置网格布局放置顺序</p><ul><li><code>row</code> 先行后列</li><li><code>column</code> 先列后行</li><li><code>row dense</code> 先行后列，并且在某些项目指定位置后，剩下的项目怎么自动放置</li><li><code>column dense</code> 先列后行，并且在某些项目指定位置后，剩下的项目怎么自动放置</li></ul></li><li><p><code>justify-items</code> ， 设置单元格内容的水平位置</p></li><li><p><code>align-items</code> ， 垂直位置， 值同上</p></li><li><p><code>place-items</code> ， <code>justify-items</code> 和 <code>place-items</code> 简写</p></li></ul><blockquote><p>可选值 start | end | center | stretch</p></blockquote><ul><li><code>justify-content</code> ，设置整个内容区域在容器里的水平位置</li><li><code>align-content</code> ， 垂直位置</li><li><code>place-content</code> ， 简写</li></ul><blockquote><p>可选值 start | end | center | stretch | space-around | space-between | space-evenly</p></blockquote><ul><li><p><code>grid-auto-columns</code> 设置浏览器自动创建的多余的网格的列宽</p></li><li><p><code>grid-auto-rows</code> 设置浏览器自动创建的多余的网格的行高</p></li><li><p><code>grid-template</code> ， 为 <code>grid-template-columns</code>、<code>grid-template-rows</code>和<code>grid-template-areas</code> 这三个属性的合并简写形式</p></li><li><p><code>grid</code> ， 为 <code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、 <code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code> 这六个属性的合并简写形式</p></li></ul><h3 id="项目属性" tabindex="-1">项目属性 <a class="header-anchor" href="#项目属性" aria-label="Permalink to &quot;项目属性&quot;">​</a></h3><ul><li><p><code>grid-column-start</code> 指定项目左边框所在的网格线</p></li><li><p><code>grid-column-end</code> 指定项目右边框所在的网格线</p></li><li><p><code>grid-row-start</code> 指定项目上边框所在的网格线</p></li><li><p><code>grid-row-end</code> 指定项目下边框所在的网格线</p><ul><li><code>span</code> 可以表示跨域多条网格线</li></ul></li><li><p><code>grid-column</code> ， <code>grid-column-start</code> 和 <code>grid-column-end</code> 的合并简写形式</p></li><li><p><code>grid-row</code> ， <code>grid-row-start</code> 属性和 <code>grid-row-end</code> 的合并简写形式</p></li><li><p><code>grid-area</code> 指定项目放在哪一个区域， <code>grid-are</code>a 属性还可用作<code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code> 的合并简写形式，直接指定项目的位置</p></li><li><p><code>justify-self</code> 设置单元格内容水平位置</p></li><li><p><code>align-self</code> 设置单元格内容垂直位置</p></li><li><p><code>place-self</code> 简写</p></li></ul><blockquote><p>可选值 start | end | center | stretch</p></blockquote>`,20),i=[a];function s(t,r,n,p,u,g){return o(),l("div",null,i)}const f=e(d,[["render",s]]);export{h as __pageData,f as default};
